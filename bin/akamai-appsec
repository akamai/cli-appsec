#!/usr/bin/env node

"use strict";

var AppSecConfig = require("../src/appSecConfig").AppSecConfig;
var CRB = require("../src/crb").CRBHandler;
var fs = require("fs");

require("sywac")
  .command("structured-rule-template", {
    desc: "Prints sample JSON of a structured custom rule.",
    aliases:["srt"],
    run: options => {
        new CRB().template().then(res=>{
          console.log(res);
        }).catch(err=>{
          console.error(err);
          process.exit(1);
        });
    }
  })
  .command("configs", {
    desc: "List configurations",
    setup: sywac => {
      sywac.boolean("--json",{
        desc: "Print the raw json response",
        group: "Options:"
      });
    },
    run: options => {
      new AppSecConfig().configs(options).then(res=>{
        console.log(res);
      }).catch(err=>{
        console.error(err);
        process.exit(1);
      });
    }
  })
  .command("create", {
    desc: "Create config",
    setup: sywac => {
      sywac.file("--file <file>", {
        desc: "Configuration details in json format, to create.",
        group: "Options:",
        required: true
      });
    },
    run: options => {
      var contents = fs.readFileSync(options.file, "utf8");
      console.log(contents);
    }
  })
  .command("versions", {
    desc: "List all versions",
    setup: sywac => {
      sywac.number("--config <id>", {
        desc: "Configuration id. Mandatory if you have more than one configuration.",
        group: "Options:",
        required: false
      });
    },
    run: options => {
      new AppSecConfig().versions(options.config).then(data => {
        console.log(data);
      }).catch(err=>{
        console.error(err);
        process.exit(1);
      });
    }
  }).command("version", {
    desc: "Read a config version",
    setup: sywac => {
      sywac.number("--config <id>", {
        desc: "Configuration id number",
        group: "Options:",
        required: true
      }).number("--version <id>", {
        desc: "The version id number",
        group: "Options:",
        required: true
      });
    },
    run: options => {
      return options.config + ", " + options.version;
    }
  })
  .showHelpByDefault()
  .help("--help", {
    group: "Command options:"
  })
  .version("--version", {
    group: "Command options:"
  })
  .epilogue("Copyright (C) Akamai Technologies, Inc\nVisit http://github.com/akamai/cli-property for detailed documentation\n")
  .outputSettings({
    maxWidth: 75
  })
  .parse()
  .then(result => {
    if (result.errors.length) {
      console.error("ERROR: ", result.errors[0] || JSON.stringify(result.errors[0]));
      console.output = "";
    }
    // if help requested, log it and exit
    if (result.output) {
      console.log(result.output);
      process.exit(result.code);
    }
  });
